/*
 * connection-browser
 *
 * Connection browser API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserApiController : ControllerBase
    { 
        /// <summary>
        /// Get all available solution sets for the current user
        /// </summary>
        /// <response code="200">A list of users</response>
        /// <response code="403">Unknown user</response>
        [HttpGet]
        [Route("/martin.pospisil/connection-browser/1.0.0/user/solutionsets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetSolutionSet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ComponentsresponsesSolutionSetsOk), description: "A list of users")]
        public virtual IActionResult GetSolutionSet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ComponentsresponsesSolutionSetsOk));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            string exampleJson = null;
            exampleJson = "\"{}\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ComponentsresponsesSolutionSetsOk>(exampleJson)
                        : default(ComponentsresponsesSolutionSetsOk);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get data about the current user
        /// </summary>
        /// <response code="200">Data about the current user</response>
        [HttpGet]
        [Route("/martin.pospisil/connection-browser/1.0.0/user")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserMetaData), description: "Data about the current user")]
        public virtual IActionResult GetUser()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserMetaData));
            string exampleJson = null;
            exampleJson = "{\n  \"role\" : \"engineer\",\n  \"name\" : \"name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<UserMetaData>(exampleJson)
                        : default(UserMetaData);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
